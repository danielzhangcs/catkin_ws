// Auto-generated. Do not edit!

// (in-package gen5.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class RotateGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.degrees_to_rotate = null;
      this.angular_velocity = null;
    }
    else {
      if (initObj.hasOwnProperty('degrees_to_rotate')) {
        this.degrees_to_rotate = initObj.degrees_to_rotate
      }
      else {
        this.degrees_to_rotate = 0.0;
      }
      if (initObj.hasOwnProperty('angular_velocity')) {
        this.angular_velocity = initObj.angular_velocity
      }
      else {
        this.angular_velocity = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type RotateGoal
    // Serialize message field [degrees_to_rotate]
    bufferOffset = _serializer.float32(obj.degrees_to_rotate, buffer, bufferOffset);
    // Serialize message field [angular_velocity]
    bufferOffset = _serializer.float32(obj.angular_velocity, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type RotateGoal
    let len;
    let data = new RotateGoal(null);
    // Deserialize message field [degrees_to_rotate]
    data.degrees_to_rotate = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [angular_velocity]
    data.angular_velocity = _deserializer.float32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 8;
  }

  static datatype() {
    // Returns string type for a message object
    return 'gen5/RotateGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'b5a9b914cd60c234ba8daecd329575c6';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Part 1: the goal, to be sent by the client
    #
    # Degree the robots need to rotate and the velocity
    float32 degrees_to_rotate
    float32 angular_velocity
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new RotateGoal(null);
    if (msg.degrees_to_rotate !== undefined) {
      resolved.degrees_to_rotate = msg.degrees_to_rotate;
    }
    else {
      resolved.degrees_to_rotate = 0.0
    }

    if (msg.angular_velocity !== undefined) {
      resolved.angular_velocity = msg.angular_velocity;
    }
    else {
      resolved.angular_velocity = 0.0
    }

    return resolved;
    }
};

module.exports = RotateGoal;
