;; Auto-generated. Do not edit!


(when (boundp 'robot_services::RotateFeedback)
  (if (not (find-package "ROBOT_SERVICES"))
    (make-package "ROBOT_SERVICES"))
  (shadow 'RotateFeedback (find-package "ROBOT_SERVICES")))
(unless (find-package "ROBOT_SERVICES::ROTATEFEEDBACK")
  (make-package "ROBOT_SERVICES::ROTATEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude RotateFeedback.msg.html


(defclass robot_services::RotateFeedback
  :super ros::object
  :slots (_rotation_completed ))

(defmethod robot_services::RotateFeedback
  (:init
   (&key
    ((:rotation_completed __rotation_completed) 0.0)
    )
   (send-super :init)
   (setq _rotation_completed (float __rotation_completed))
   self)
  (:rotation_completed
   (&optional __rotation_completed)
   (if __rotation_completed (setq _rotation_completed __rotation_completed)) _rotation_completed)
  (:serialization-length
   ()
   (+
    ;; float32 _rotation_completed
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _rotation_completed
       (sys::poke _rotation_completed (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _rotation_completed
     (setq _rotation_completed (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get robot_services::RotateFeedback :md5sum-) "9cefb4e1ca23db842009caa7fcf3ff37")
(setf (get robot_services::RotateFeedback :datatype-) "robot_services/RotateFeedback")
(setf (get robot_services::RotateFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float32 rotation_completed


")



(provide :robot_services/RotateFeedback "9cefb4e1ca23db842009caa7fcf3ff37")


