;; Auto-generated. Do not edit!


(when (boundp 'robot_services::RotateGoal)
  (if (not (find-package "ROBOT_SERVICES"))
    (make-package "ROBOT_SERVICES"))
  (shadow 'RotateGoal (find-package "ROBOT_SERVICES")))
(unless (find-package "ROBOT_SERVICES::ROTATEGOAL")
  (make-package "ROBOT_SERVICES::ROTATEGOAL"))

(in-package "ROS")
;;//! \htmlinclude RotateGoal.msg.html


(defclass robot_services::RotateGoal
  :super ros::object
  :slots (_rads_to_turn ))

(defmethod robot_services::RotateGoal
  (:init
   (&key
    ((:rads_to_turn __rads_to_turn) 0.0)
    )
   (send-super :init)
   (setq _rads_to_turn (float __rads_to_turn))
   self)
  (:rads_to_turn
   (&optional __rads_to_turn)
   (if __rads_to_turn (setq _rads_to_turn __rads_to_turn)) _rads_to_turn)
  (:serialization-length
   ()
   (+
    ;; float32 _rads_to_turn
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _rads_to_turn
       (sys::poke _rads_to_turn (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _rads_to_turn
     (setq _rads_to_turn (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get robot_services::RotateGoal :md5sum-) "d004314c61590cdf48db27002978bbb1")
(setf (get robot_services::RotateGoal :datatype-) "robot_services/RotateGoal")
(setf (get robot_services::RotateGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# goal 
float32 rads_to_turn

")



(provide :robot_services/RotateGoal "d004314c61590cdf48db27002978bbb1")


